@model BusinessObjects.Product
@{
    ViewData["Title"] = "Create New";
}
<h2>Create Object</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-group">
        @Html.LabelFor(model => model.ProductName)
        @Html.TextBoxFor(model => model.ProductName, new { @class = "form-control" })
        @*@Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })*@
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.CategoryId)
        @Html.TextBoxFor(model => model.CategoryId, new { @class = "form-control" })
        @*@Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })*@
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.UnitPrice)
        @Html.TextBoxFor(model => model.UnitPrice, new { @class = "form-control" })
        @*@Html.ValidationMessageFor(model => model.UnitPrice, "", new { @class = "text-danger" })*@
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.UnitsInStock)
        @Html.TextBoxFor(model => model.UnitsInStock, new { @class = "form-control" })
        @*@Html.ValidationMessageFor(model => model.UnitsInStock, "", new { @class = "text-danger" })*@
    </div>


    <div class="form-group">
        <input type="submit" value="Create" class="btn btn-primary" />
    </div>
}
@if (!ViewData.ModelState.IsValid)
{
    <div class="alert alert-danger">
        <h4 class="alert-heading">Validation Error!</h4>
        <ul>
            @foreach (var key in ViewData.ModelState.Keys)
            {
                foreach (var error in ViewData.ModelState["error"].Errors)
                {
                    <li>@error.ErrorMessage</li>
                }
            }
        </ul>
    </div>
}